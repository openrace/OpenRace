---
# based on http://m-button.blogspot.com/2018/02/deploying-docker-and-kubernetes-on.html

- name: Add encryption key for the Docker repository
  apt_key:
    url: "{{ item }}"
    state: present
  with_items:
    - https://download.docker.com/linux/raspbian/gpg
  become: true

- name: Clean Docker repository files to be idempotent
  file:
    name: "{{ item }}"
    state: absent
  with_items:
    - /etc/apt/sources.list.d/docker.list
  become: true
  changed_when: false

- name: Recreate Docker repository files
  file:
    name: "{{ item }}"
    state: touch
  with_items:
    - /etc/apt/sources.list.d/docker.list
  become: true
  changed_when: false

- name: Add Docker repository to the list of repositories
  lineinfile:
    dest: /etc/apt/sources.list.d/{{ item.category }}.list
    line: "{{ item.url }}"
  with_items:
    - { url: "deb [arch=armhf] https://download.docker.com/linux/raspbian {{ansible_distribution_release|lower}} stable", category: 'docker' }
  become: true
  changed_when: false

- name: Install packages to allow apt to use HTTPS repositories
  apt:
    name: ['apt-transport-https', 'ca-certificates', 'software-properties-common']
    state: present
  become: true

- name: Update list of available repositories
  apt:
    update_cache: yes
  become: true
  changed_when: false

- name: Update all packages to the latest version
  apt:
    upgrade: dist
  become: true

- name: Install Docker
  apt:
    name: ['docker-ce']
    state: present
  notify: restart docker
  become: true

- name: "Add user {{ ansible_user_id }} to the docker group"
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes
  notify: restart docker
  become: true

- name: installing python 2 pip for ansible and dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - python-pip
  become: true

- name: starting and enabling docker-ce service
  systemd:
    name: docker.service
    state: started
    enabled: yes
  become: true

- name: copy docker prune service
  template:
    src: docker-prune.service.j2
    dest: /etc/systemd/system/docker-prune.service
    owner: root
    group: root
    mode: 0644
  become: true

- name: copy docker prune timer
  template:
    src: docker-prune.timer.j2
    dest: /etc/systemd/system/docker-prune.timer
    owner: root
    group: root
    mode: 0644
  become: true

- name: enable docker prune timer
  systemd:
    name: docker-prune.timer
    state: started
    enabled: yes
    daemon_reload: yes
  become: true

# ToDo: enable experimental cli mode!